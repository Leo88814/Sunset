
@{
    ViewBag.Title = "線上訂票-確認訂單";
}

<head>
    <title>線上訂票-確認訂單</title>
    <link rel="stylesheet" href="~/CSS/styles.css" />
</head>
<body>
    <div id="app" class="page-container">
        
        <section class="login-section container">
            <nav style="--bs-breadcrumb-divider: '>'" aria-label="breadcrumb">
                <ol class="breadcrumb ms-3">
                    <li class="breadcrumb-item"><a href="@Url.Action("index", "Home")">首頁</a></li>
                    <li class="breadcrumb">線上訂票</li>
                    <li class="breadcrumb"><a href="@Url.Action("ChoiceMovies", "BookTickets")">選擇電影</a></li>
                    <li class="breadcrumb"><a href="Booking-ChoiceDate.html">選擇日期</a></li>
                    <li class="breadcrumb"><a href="Booking-ChoiceSeats.html">選擇座位</a></li>
                    <li class="breadcrumb">確認訂單</li>
                </ol>
            </nav>

            <h2 class="text">線上訂票步驟</h2>
            <div class="step-bar">
                <div class="step-item">1.選擇電影</div>
                <div class="step-item">2.場次選擇</div>
                <div class="step-item fw-bolder">3.確認訂單</div>
                <div class="step-item">4.訂單完成</div>
            </div>

            <div class="container mt-3">
                <div class="row">
                    <div class="col-md-3 col-sm-6">
                        <img class="img-fluid mt-4" :src="`/images/${orderDetail.mainPicture}`"/>
                        <p class="text-center fw-bolder mt-2">
                            {{ orderDetail.movieName }}
                        </p>
                    </div>

                    <div class="col-md-9 col-sm-6">
                        <section class="order-confirmation">
                            <table class="table table-bordered mt-4">
                                <thead>
                                    <tr>
                                        <th scope="col">電影名稱</th>
                                        <th scope="col">日期</th>
                                        <th scope="col">時間</th>
                                        <th scope="col">影廳</th>
                                        <th scope="col">座位</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td>{{ orderDetail.movieName }}</td>
                                        <td>{{ orderDetail.showtimeDateString }}</td>
                                        <td>{{ orderDetail.startTime}}</td>
                                        <td>{{ orderDetail.auditoriumName }}</td>
                                        <td>
                                            <span v-for="(seat, index) in seatInfo" :key="index">
                                                {{ seat.seatNumber }}
                                                <span v-if="index < seatInfo.length - 1">, </span>
                                            </span>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>

                            <table class="table table-bordered mt-4">
                                <thead>
                                    <tr>
                                        <th>票種</th>
                                        <th>單價</th>
                                        <th>數量</th>
                                        <th>小計</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr v-for="(ticket, index) in selectedTickets" :key="index">
                                        <td>{{ ticket.name }}</td>
                                        <td>{{ ticket.price }}</td>
                                        <td>{{ ticket.quantity }}</td>
                                        <!-- 計算小計 -->
                                        <td>{{ ticket.price * ticket.quantity }}</td>
                                    </tr>
                                </tbody>
                            </table>

                            <!-- 錢包資訊表格 -->
                            <table class="table table-bordered mt-4">
                                <thead>
                                    <tr>
                                        <th>儲值金</th>
                                        <th>電影票總金額</th>
                                        <th>付款後錢包餘額</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td>NT${{storedBalance}}</td>
                                        <td>NT${{totalTicketPrice}}</td>
                                        <td>NT${{remainingBalance}}</td>
                                    </tr>
                                </tbody>
                            </table>
                            <div v-if="isBalanceInsufficient"
                                 class="alert alert-danger mt-3">
                                儲值金額不足，無法支付電影票總金額！
                            </div>
                        </section>
                    </div>
                </div>
            </div>

            <div class="text-end mt-3">
                <button v-on:click="goToPreviousPage" class="btn btn-outline-danger">
                    上一頁
                </button>
                <button v-on:click="goToNextPage" class="btn btn-outline-primary ms-2">
                    確認訂單
                </button>
            </div>
        </section>

    </div>
    @section scripts{
        <script>
            const { createApp, ref, onMounted, computed } = Vue;

            const config = {
                setup() {
                    const orderDetail = ref([]);
                    const seatInfo = ref([]);
                    const selectedMovie = ref(null);
                    const selectedDate = ref(null);
                    const selectedTime = ref(null);
                    const movieScheduleId = @Html.Raw(ViewBag.movieScheduleId);
                    const seatIds = @Html.Raw(Json.Encode(ViewBag.seatsId));
                    const storedBalance = ref(3000); // 儲值金
                    onMounted(async () => {
                        try {
                            const response = await fetch(`/api/CheckOrderApi/CheckOrder/${movieScheduleId}/${seatIds}`, {
                                method: 'GET',
                                headers: {
                                    'Content-Type': 'application/json'
                                }
                            });
                            if (!response.ok) {
                                throw new Error(`HTTP error! status: ${response.status}`);
                            }
                            const data = await response.json();
                            orderDetail.value = data.movieScheduleInfo;
                            seatInfo.value = data.choiceSeatInfo;
                            console.log("seatInfo.value", seatInfo.value);
                        } catch (error) {
                            console.error("Error:", error);
                        }
                    });

                    const goToPreviousPage = () => {
                        window.location.href = "Booking-ChoiceSeats.html";
                    };

                    const goToNextPage = () => {
                        if (!isBalanceInsufficient.value) {
                            window.location.href = "Booking-OrderComplete.html"; // 跳轉到下一頁
                        }
                    };

                    const confirmOrder = () => {
                        alert("訂單已確認！");
                    };

                    const selectedTickets = JSON.parse(
                        localStorage.getItem("selectedTickets")
                    );


                    const ticketNames = selectedTickets
                        .map((ticket) => ticket.name)
                        .join(", ");
                    const ticketPrices = selectedTickets
                        .map((ticket) => ticket.price)
                        .join(", ");
                    const ticketQuantities = selectedTickets
                        .map((ticket) => ticket.quantity)
                        .join(", ");

                    const ticketTotalPrice =
                        parseInt(ticketPrices) * parseInt(ticketQuantities);



                    const totalTicketPrice = computed(() => {
                        return selectedTickets.reduce(
                            (total, ticket) => total + ticket.price * ticket.quantity,
                            0
                        );
                    });

                    const remainingBalance = computed(() => {
                        return storedBalance.value - totalTicketPrice.value;
                    });

                    // 檢查儲值金是否不足
                    const isBalanceInsufficient = computed(() => {
                        return remainingBalance.value < 0;
                    });

                    return {
                        selectedMovie,
                        goToPreviousPage,
                        goToNextPage,

                        confirmOrder,
                        selectedDate,
                        selectedTime,
                        selectedTickets,


                        ticketNames,
                        ticketPrices,
                        ticketQuantities,
                        ticketTotalPrice,
                        totalTicketPrice,
                        remainingBalance,
                        isBalanceInsufficient,
                        storedBalance,
                        orderDetail,
                        seatInfo,

                    };
                },
            };

            const app = createApp(config);
            app.mount("#app");
        </script>
    }
</body>

