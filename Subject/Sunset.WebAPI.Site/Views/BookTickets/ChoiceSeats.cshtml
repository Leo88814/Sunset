
@{
    ViewBag.Title = "線上訂票-選擇座位";
}

<head>
    <title>線上訂票-選擇座位</title>
    <link rel="stylesheet" href="~/CSS/styles.css" />
    <style>
        #seats {
            max-width: 95%;
            display: grid;
            grid-template-columns: repeat(16, 1fr);
            gap: 10px;
        }

        .seat {
            width: 40px;
            height: 40px;
            background-color: lightgray;
            text-align: center;
            line-height: 40px;
            cursor: pointer;
        }

        .selected {
            background-color: green !important;
        }

        .unavailable {
            background-color: red;
            cursor: not-allowed;
        }

        #choiceseats {
            max-width: 95%;
        }
    </style>
</head>
<body>
    <div id="app" class="page-container">

        <section class="login-section container">
            <nav style="--bs-breadcrumb-divider: '>'" aria-label="breadcrumb">
                <ol class="breadcrumb ms-3">
                    <li class="breadcrumb-item"><a href="@Url.Action("index", "Home")">首頁</a></li>
                    <li class="breadcrumb">線上訂票</li>
                    <li class="breadcrumb"><a href="@Url.Action("ChoiceMovies", "BookTickets")">選擇電影</a></li>
                    <li class="breadcrumb"><a href="Booking-ChoiceDate.html">選擇日期</a></li>
                    <li class="breadcrumb">選擇座位</li>
                </ol>
            </nav>

            <h2 class="text">線上訂票步驟</h2>
            <div class="step-bar">
                <div class="step-item">1.選擇電影</div>
                <div class="step-item fw-bolder">2.場次選擇</div>
                <div class="step-item">3.確認訂單</div>
                <div class="step-item">4.訂單完成</div>
            </div>

            <div class="container mt-3">
                <div class="row">
                    <!--選擇票種-->
                    <div class="col-md-9 col-sm-6">
                        <h5 class="fw-bolder">選擇票種</h5>
                        <div class="row">
                            <div class="col-4"
                                 v-for="(ticket, index) in ticketTypes"
                                 :key="ticket.name">
                                {{ ticket.name }} {{ ticket.price }}元
                                <select v-model="ticket.selected"
                                        class="form-select"
                                        v-on:change="validateSelection">
                                    <option v-for="n in availableOptions(ticket)"
                                            :key="n"
                                            :value="n">
                                        {{ n }}
                                    </option>
                                </select>
                            </div>
                        </div>
                        <!-- 顯示票種錯誤訊息 -->
                        <div class="text-danger" v-if="ticketError">
                            {{ ticketError }}
                        </div>
                    </div>

                    <div class="col-md-3 col-sm-6">
                        帳號限購最多三張票
                        <div class="mt-2">優待票：學生證、軍警相關證明文件。</div>
                        <div class="mt-2">
                            愛心票：未滿5歲、年滿65歲以上，身心障礙人士需出示身心障礙證件入場需出示證件。
                        </div>
                    </div>

                </div>
            </div>

            <div class="col-12 text-center">
                <img src="/images/Seats.jpg" class="mt-3" id="choiceseats" />
            </div>

            <div class="container mt-3">
                <div class="row">
                    <h5 class="fw-bolder">選擇座位</h5>

                    <div id="seats">
                        <div class="seat"
                             v-for="s in seats"
                             :key="s.id"
                             :class="{ selected: s.selected, unavailable: s.unavailable }"
                             v-on:click="toggleSeatSelection(s)">
                            {{ s.SeatNumber }}
                        </div>
                    </div>
                    <!-- 座位選擇錯誤訊息 -->
                    <div class="text-danger" v-if="seatError">{{ seatError }}</div>
                </div>
            </div>

            <div class="text-end mt-3">
                <a href="`@Url.Action("ChoiceDates", "BookTickets")/${movieId}`" class="btn btn-outline-danger">
                    上一頁
                </a>
                <button v-on:click="goToNextPage" class="btn btn-outline-primary ms-2">
                    下一頁
                </button>
            </div>
        </section>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
            crossorigin="anonymous"></script>
    <script src="https://unpkg.com/vue@3.5.4/dist/vue.global.js"></script>
    <script src="~/js/header-component.js"></script>
    <script src="~/js/footer-component.js"></script>
    <script>
        const { createApp, ref, onMounted, computed } = Vue;

        const app = createApp({
            components: {
                "header-component": HeaderComponent,
                "footer-component": FooterComponent,
            },
            setup() {
                const seats = ref([]);
                const movieId = @Html.Raw(ViewBag.movieId);
                const showdateId = @Html.Raw(ViewBag.showdateId);
                const showtimeId = @Html.Raw(ViewBag.showtimeId);
                const maxTickets = ref(3);
                const maxTotalTickets = ref(3);
                const seatError = ref("");
                const ticketError = ref("");
                const selectedTicketInfo = ref("");

                const ticketTypes = ref([
                    { name: "全票", price: 230, selected: 0 },
                    { name: "優待票", price: 200, selected: 0 },
                    { name: "愛心票", price: 180, selected: 0 },
                ]);

                const choiceSeats = async () => {
                    try {
                        const response = await fetch(`/api/GetSeatsApi/ChoiceSeats/${movieId}/${showdateId}/${showtimeId}`, {
                            method: 'GET',
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        });
                        if (!response.ok) {
                            throw new Error(`HTTP error! status: ${response.status}`);
                        }
                        const data = await response.json();
                        seats.value = data;
                    } catch (error) {
                        console.error("Error:", error);
                    }
                };

                onMounted(() => {
                    choiceSeats();
                });

                //計算總票數
                const totalTickets = computed(() => {
                    return ticketTypes.value.reduce(
                        (total, ticket) => total + ticket.selected,
                        0
                    );
                });
                //判斷是否超過所選的總票數
                const validateSelection = () => {
                    if (totalTickets.value > maxTotalTickets.value) {
                        ticketError.value = `最多只能選擇 ${maxTotalTickets.value} 張票`;
                        return false;
                    }
                    ticketError.value = "";
                    return true;
                };

                //計算可選票種的票數
                const availableOptions = (ticket) => {
                    const remainingTickets = maxTotalTickets.value - totalTickets.value;
                    const currentSelected = ticket.selected;
                    return Array.from(
                        {
                            length:
                                Math.min(
                                    remainingTickets + currentSelected,
                                    maxTickets.value
                                ) + 1,
                        },
                        (_, i) => i
                    );
                };

                const selectedSeats = computed(() => {
                    return seats.value.filter((seat) => seat.selected).length;
                });

                const toggleSeatSelection = (seat) => {
                    if (
                        seat.unavailable ||
                        (selectedSeats.value >= totalTickets.value && !seat.selected)
                    ) {
                        seatError.value = "選擇的座位不能超過總票數";
                        return;
                    }
                    seat.selected = !seat.selected;
                    seatError.value = "";
                };

                const goToNextPage = () => {
                    if (selectedSeats.value !== totalTickets.value) {
                        seatError.value = `您需要選擇 ${totalTickets.value} 個座位`;
                    }
                    else
                    {
                        seatError.value = "";
                        const selectedSeatIds = seats.value
                            .filter((seat) => seat.selected)
                            .map((seat) => seat.id);
                        localStorage.setItem(
                            "selectedSeats",
                            JSON.stringify(selectedSeatIds)
                        );
                        const selectedTicketInfo = ticketTypes.value
                            .filter((ticket) => ticket.selected > 0)
                            .map((ticket) => ({
                                name: ticket.name,
                                price: ticket.price,
                                quantity: ticket.selected,
                            }));

                        localStorage.setItem(
                            "selectedTickets",
                            JSON.stringify(selectedTicketInfo)
                        );
                        window.location.href = "Booking-CheckOrder.html";
                    }
                };

                return {
                    maxTickets,
                    maxTotalTickets,
                    ticketTypes,
                    totalTickets,
                    availableOptions,
                    ticketError,
                    goToNextPage,
                    toggleSeatSelection,
                    selectedSeats,
                    seats,
                    validateSelection,
                    seatError,
                    choiceSeats,
                };
            },
        });

        app.mount("#app");
    </script>
</body>