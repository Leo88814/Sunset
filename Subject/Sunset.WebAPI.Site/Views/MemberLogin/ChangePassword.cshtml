@model Sunset.WebAPI.Site.Models.ViewModels.ChangePasswordVm

@{
    ViewBag.Title = "ChangePassword";
}

<head>
    <style>
        body, html {
            height: 100vh;
            margin: 0;
        }

        .container {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
        }

        .form-container {
            width: 100%;
            max-width: 500px;
            padding: 20px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
            background-color: #fff;
            border-radius: 5px;
        }

        .form-horizontal {
            width: 100%;
        }

        /* 新增的 CSS 規則 */
        body, .form-container, .form-label {
            color: black;
        }
    </style>

</head>
<div class="container">
    <div class="form-container">
        <h2 class="text-center mb-4">變更密碼</h2>

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)


                <div class="mb-3">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "form-label" })
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", autocomplete = "current-password" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.NewPassword, htmlAttributes: new { @class = "form-label" })
                    @Html.EditorFor(model => model.NewPassword, new { htmlAttributes = new { @class = "form-control", autocomplete = "new-password" } })
                    @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "form-label" })
                    @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", autocomplete = "new-password" } })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3 text-end">
                    <input type="submit" value="更改" class="btn btn-primary" />
                </div>
            </div>
        }
    </div>
</div>
    }


    @section Scripts {

        @if (TempData["SuccessMessage"] != null)
        {
            <script>
                alert('@TempData["SuccessMessage"]');
            </script>
        }
        @Scripts.Render("~/bundles/jqueryval")
    }
