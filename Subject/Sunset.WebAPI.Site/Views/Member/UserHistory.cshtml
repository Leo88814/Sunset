@{
    ViewBag.Title = "歷史訂單";
}
<title>會員專區-歷史訂單</title>
<style>
    body {
        font-family: Arial, sans-serif;
        background-color: #f4f4f9;
        margin: 0;
        padding: 0;
    }

    .pageContainer {
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px;
    }


    .ticket {
        border: 1px solid #ddd;
        padding: 15px;
        margin-bottom: 20px;
        background-color: #fff;
        border-radius: 8px;
        display: flex;
        align-items: center;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

        .ticket img {
            width: 120px;
            height: auto;
            cursor: pointer;
            border-radius: 8px;
            margin-right: 20px;
        }

    .ticket-details {
        flex: 1;
        margin-left: 20px;
    }

        .ticket-details p {
            margin: 5px 0;
            color: #333;
        }

    .rating {
        display: flex;
        align-items: center;
        justify-content: flex-end;
    }

    .rating-stars {
        display: flex;
        margin-left: 5px;
    }

        .rating-stars span {
            font-size: 24px;
            cursor: pointer;
            color: #ccc;
        }

            .rating-stars span.active {
                color: gold;
            }
            .breadcrumb {
        background-color: #2a2a2a;
        padding: 10px;
        border-radius: 5px;
    }

    .breadcrumb-item a {
        color: #ffd700;
    }

    .breadcrumb-item.active {
        color: #ffffff;
    }
</style>

<body>
    <div id="app" class="page-container">
        <div class="container">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">首頁</a></li>
                    <li class="breadcrumb">會員專區</li>
                    <li class="breadcrumb active">歷史訂單</li>
                </ol>
            </nav>
        </div>

        <div class="container">
            <h2>歷史訂單</h2>
            <div v-for="ticket in tickets" :key="ticket.orderNumber" class="ticket">
                <img :src="ticket.mainPicture" alt="ticket.movieName" v-on:click="viewDetails(ticket.orderNumber)" />
                <div class="ticket-details">
                    <p><strong>電影名稱：</strong> {{ ticket.movieName }}</p>
                    <p><strong>訂單編號：</strong> {{ ticket.orderNumber }}</p>
                    <p><strong>票數：</strong> {{ ticket.totalTicketCount }} 張</p>
                    <p><strong>場次時間：</strong> {{ ticket.showTime }}</p>
                    <p><strong>場次日期：</strong> {{ ticket.showDate }}</p>
                    <div class="rating">
                        <p><strong>評分：</strong></p>
                        <div class="rating-stars">
                            <span v-for="star in 5" :key="star" :class="{ active: star <= ticket.rating }" v-on:click="rateOrder(ticket.id, star)">★</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @section scripts{
        <script>
            const { createApp, ref, onMounted } = Vue;

            const config = {
                setup() {
                    const tickets = ref([]);
                    const memberId = getCookie("memberId");
                    const apiUrl = `/api/MemberApiController/UserHistory`;

                    const fetchOrders = async () => {
                        try {
                            const token = getCookie("bookmovie");
                            const response = await fetch(apiUrl, {
                                headers: {
                                    'Authorization': `Bearer ${token}`
                                }
                            });
                            if (!response.ok) {
                                throw new Error(`API request failed with status: ${response.status}`);
                            }
                            const data = await response.json();
                            const now = new Date();
                            tickets.value = data.filter(ticket => {
                                const showDateTime = new Date(`${ticket.showDate}T${ticket.showTime}`);
                                return showDateTime <= now;
                            });
                        } catch (error) {
                            console.error("Error fetching orders:", error);
                        }
                    };

                    const rateOrder = async (orderId, rating) => {
                        try {
                            const response = await fetch(`/api/MemberApiController/RateOrder`, {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                    'X-MemberId': memberId
                                },
                                body: JSON.stringify({ orderId, rating })
                            });
                            if (!response.ok) {
                                throw new Error(`API request failed with status: ${response.status}`);
                            }
                            await fetchOrders();
                            alert(`給予 ${rating} 星評分`);
                        } catch (error) {
                            console.error("Error rating order:", error);
                        }
                    };

                    const viewDetails = (orderNumber) => {
                        localStorage.setItem('orderNumber', orderNumber);
                        window.location.href = '/Member/OrderDetails';
                    };

                    onMounted(fetchOrders);

                    return {
                        tickets,
                        rateOrder,
                        viewDetails
                    };
                },
            };

            const app = createApp(config);
            app.mount("#app");

            function getCookie(name) {
                const value = `; ${document.cookie}`;
                const parts = value.split(`; ${name}=`);
                if (parts.length === 2) return parts.pop().split(';').shift();
            }
        </script>
    }
</body>