@{
    ViewBag.Title = "歷史訂單";
}

<style>
    .ticket {
        border: 1px solid #000;
        padding: 15px;
        margin-bottom: 20px;
        background-color: #e7d7bc;
        border-radius: 15px;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .ticket img {
        width: 100px;
        cursor: pointer;
        border-radius: 10px;
    }

    .ticket-details {
        flex: 1;
        margin-left: 20px;
    }

    .ticket-details p {
        margin: 5px 0;
    }

    .rating {
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .rating-stars {
        display: flex;
        margin-top: 10px;
    }

    .rating-stars span {
        font-size: 24px;
        cursor: pointer;
        color: #ccc;
    }

    .rating-stars span.active {
        color: gold;
    }
</style>

<body>
    <div id="app" class="page-container">
        <div class="container">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="Main.html">首頁</a></li>
                    <li class="breadcrumb">會員專區</li>
                    <li class="breadcrumb active">歷史訂單</li>
                </ol>
            </nav>
        </div>

        <div class="container">
            <h2>歷史訂單</h2>
            <div v-for="ticket in tickets" :key="ticket.orderNumber" class="ticket">
                <img :src="ticket.MainPicture" alt="ticket.movieName" v-on:click="viewDetails(ticket.OrderNumber)" />
                <div class="ticket-details">
                    <p>
                        <strong>電影名稱：</strong> {{ ticket.MovieName }}
                    </p>
                    <p><strong>訂單編號：</strong> {{ ticket.OrderNumber }}</p>
                    <p><strong>票數：</strong> {{ ticket.TotalTicketCount }} 張</p>
                    <p><strong>場次時間：</strong> {{ ticket.ShowTime }}</p> <!-- 顯示時間 -->
                    <p><strong>場次日期：</strong> {{ ticket.ShowDate }}</p> <!-- 顯示日期 -->
                    <div class="rating">
                        <p><strong>評分：</strong></p>
                        <div class="rating-stars">
                            <span v-for="star in 5" :key="star" :class="{ active: star <= ticket.Rating }" v-on:click="rateOrder(ticket.Id, star)">★</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @section scripts{
        <script>
            const { createApp, ref, onMounted } = Vue;

            const config = {
                setup() {
                    const tickets = ref([]);
                    const memberId = '1'; // 直接設置 memberId 為 1 來進行測試
                    const apiUrl = `/api/MemberApiController/UserHistory/${memberId}`;

                    const fetchOrders = async () => {
                        try {
                            const response = await fetch(apiUrl);
                            if (!response.ok) {
                                throw new Error(`API request failed with status: ${response.status}`);
                            }
                            const data = await response.json();
                            tickets.value = data;
                        } catch (error) {
                            console.error("Error fetching orders:", error);
                        }
                    };

                    const rateOrder = async (orderId, rating) => {
                        try {
                            const response = await fetch(`/api/MemberApiController/RateOrder`, {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify({ orderId, rating })
                            });
                            if (!response.ok) {
                                throw new Error(`API request failed with status: ${response.status}`);
                            }
                            await fetchOrders(); // 重新獲取訂單以更新評分
                        } catch (error) {
                            console.error("Error rating order:", error);
                        }
                    };

                    const viewDetails = (orderNumber) => {
                        window.location.href = `/Member/OrderDetails/${orderNumber}?memberId=${memberId}`;
                    };

                    onMounted(fetchOrders);

                    return {
                        tickets,
                        rateOrder,
                        viewDetails
                    };
                },
            };

            const app = createApp(config);
            app.mount("#app");
        </script>
    }
</body>